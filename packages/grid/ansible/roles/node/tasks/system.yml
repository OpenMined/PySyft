---
# - name: Install security updates
#   shell: "sudo apt list --upgradable | grep security |cut -d\/ -f1|xargs sudo apt-get install -y --only-upgrade"
#   become: yes
#   args:
#     executable: /bin/bash

- name: Allow sudo without password
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"

- name: Create docker group
  group:
    name: "docker"
    state: present

- name: Create om group
  group:
    name: "{{ om_group }}"
    state: present

- name: Add user to om and docker
  user:
    name: "{{ om_user }}"
    comment: "OpenMined user for running node"
    groups:
      - "{{ om_group }}"
      - sudo
      - docker
    shell: /bin/bash

- name: Give permission to home dir
  file:
    path: "{{ om_homedir }}"
    state: directory
    mode: "0775"
    owner: "{{ om_user }}"
    group: "{{ om_group }}"
    # recurse: yes

- name: Add user to vagrant group
  user:
    name: "{{ om_user }}"
    groups:
      - vagrant
    append: yes
  when: vagrant is defined

- name: Install System Packages
  package:
    name: "{{ item }}"
    state: present
    autoclean: yes
    update_cache: yes
  loop:
    - acl
    - python3-pip
    - ntp
    - tmux
    - vim
    - ufw
    - git
    - python-is-python3
    - net-tools
    - ifupdown
    - python3-venv

- name: Upgrade pip and some packages
  pip:
    name: pip
    extra_args: --upgrade

- name: Install pipx
  pip:
    name: pipx
    extra_args: --upgrade

- name: Add .local/bin to PATH
  shell: "runuser -l {{ om_user }} -c 'pipx ensurepath'"
  become: yes

- name: Check ctop exists
  stat:
    path: /usr/local/bin/ctop
  register: ctop_exists

- name: Install ctop Docker CLI Utility
  shell: sudo wget https://github.com/bcicen/ctop/releases/download/0.7.6/ctop-0.7.6-linux-amd64 -O /usr/local/bin/ctop && sudo chmod +x /usr/local/bin/ctop
  become: yes
  when: not ctop_exists.stat.exists

- name: Ensuring ufw service is always running
  systemd:
    enabled: yes
    state: started
    name: ufw
  when: wsl is not defined

- name: Set timezone to UTC
  timezone:
    name: UTC

- name: Ensuring ntp service is always running
  systemd:
    enabled: yes
    state: started
    name: ntp
