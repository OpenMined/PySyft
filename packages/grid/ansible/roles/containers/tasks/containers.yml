---
- name: Fix Bad DB
  shell: ". ../packages/grid/.env && ./fix_db.sh $POSTGRES_PASSWORD d4867f3a4c0a"
  args:
    chdir: "{{ syft_dir }}/scripts"
  become_user: "{{ om_user }}"
  ignore_errors: yes
  when: docker_volume_destroy is not defined and install == "true"

- name: Kill Docker Containers
  shell: "docker rm $(docker ps -qa) --force || true"
  become_user: "{{ om_user }}"
  ignore_errors: yes

- name: Build Docker Images
  shell: "docker compose build"
  args:
    chdir: "{{ build_dir }}/packages/grid"
  become_user: "{{ om_user }}"
  when: vagrant is not defined and install == "true" and docker_tag == "local"

- name: Build Docker Images
  shell: "docker compose build"
  args:
    chdir: "{{ syft_dir }}/packages/grid"
  become_user: "{{ om_user }}"
  when: vagrant is defined and install == "true" and docker_tag == "local"

- name: Remove old Docker Images
  shell: "docker rmi $(docker images -qa -f 'dangling=true') || true"
  become_user: "{{ om_user }}"
  ignore_errors: yes
  when: install == "true" and docker_tag == "local"

- name: Remove Docker Volumes
  shell: "docker volume prune -f"
  become_user: "{{ om_user }}"
  ignore_errors: yes
  when: docker_volume_destroy is defined

- name: Start Docker Containers
  shell:
    cmd: runuser -l {{ om_user }} -c 'hagrid launch {{ node_name }} {{ node_type }} to docker:80 --release={{ release }} --tag={{ docker_tag }} --tail=false'
  become: yes
  when: tls == "false" and install == "true"

- name: Start Docker Containers with TLS
  shell:
    cmd: runuser -l {{ om_user }} -c 'hagrid launch {{ node_name }} {{ node_type }} to docker:80 --release={{ release }} --tag={{ docker_tag }} --tail=false --tls --cert_store_path={{ cert_store_path }}'
  become: yes
  when: tls == "true" and install == "true"
