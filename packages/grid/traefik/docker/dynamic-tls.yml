http:
  services:
    frontend:
      loadBalancer:
        servers:
          - url: "http://frontend:80"
    backend:
      loadBalancer:
        servers:
          - url: "http://proxy:8001"
    backend-stream:
      loadBalancer:
        servers:
          - url: "http://proxy:8011"
    seaweedfs:
      loadBalancer:
        servers:
          - url: "http://seaweedfs:8333"
  routers:
    frontend:
      rule: "PathPrefix(`/`)"
      entryPoints:
        - web
        - websecure
      service: "frontend"
    backend:
      rule: "PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)"
      entryPoints:
        - web
        - websecure
      service: "backend"
    backend-stream:
      rule: "PathPrefix(`/api`) && PathPrefix(`/api/v1/syft/stream`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)"
      entryPoints:
        - web
        - websecure
      service: "backend-stream"
    blob-storage:
      rule: "PathPrefix(`/blob`)"
      entryPoints:
        - web
        - websecure
      service: "seaweedfs"
      middlewares:
        - "blob-storage-url"
        - "blob-storage-host"
    ping:
      rule: "PathPrefix(`/ping`)"
      entryPoints:
        - web
        - websecure
      service: "ping@internal"

  middlewares:
    # by rewriting the customrequestheaders.Host with the same host:port as the
    # code uses internally any S3 presigned urls will still validate
    blob-storage-host:
      headers:
        customrequestheaders:
          Host: seaweedfs:8333
    blob-storage-url:
      stripprefix:
        prefixes: /blob
        forceslash: true

tls:
  certificates:
    - certFile: /etc/traefik/certs/cert.pem
      keyFile: /etc/traefik/certs/key.pem
  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/certs/cert.pem
        keyFile: /etc/traefik/certs/key.pem
