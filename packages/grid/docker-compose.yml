version: "3.8"
services:
  # docker-host:
  #   image: qoomon/docker-host
  #   cap_add:
  #     - net_admin
  #     - net_raw

  proxy:
    restart: always
    hostname: ${NODE_NAME?Variable not set}
    image: ${DOCKER_IMAGE_TRAEFIK?Variable not set}:${TRAEFIK_VERSION?Variable not set}
    profiles:
      - proxy
    networks:
      - "${TRAEFIK_PUBLIC_NETWORK?Variable not set}"
      - default
    volumes:
      - "./traefik/docker/traefik.yml:/etc/traefik/traefik.yml"
      - "./traefik/docker/dynamic.yml:/etc/traefik/conf/dynamic.yml"
    environment:
      - SERVICE_NAME=proxy
      - RELEASE=${RELEASE:-production}
      - HOSTNAME=${NODE_NAME?Variable not set}
      - HTTP_PORT=${HTTP_PORT}
      - HTTPS_PORT=${HTTPS_PORT}
    ports:
      - "${HTTP_PORT}:81"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "orgs.openmined.syft=this is a syft proxy container"

    # depends_on:
    #   - "docker-host"

  frontend:
    restart: always
    image: "${DOCKER_IMAGE_FRONTEND?Variable not set}:${VERSION-latest}"
    profiles:
      - frontend
    depends_on:
      - proxy
    environment:
      - SERVICE_NAME=frontend
      - RELEASE=${RELEASE:-production}
      - NODE_TYPE=${NODE_TYPE?Variable not set}
      - FRONTEND_TARGET=${FRONTEND_TARGET}
      - VERSION=${VERSION}
      - VERSION_HASH=${VERSION_HASH}
      - PORT=80
      - HTTP_PORT=${HTTP_PORT}
      - HTTPS_PORT=${HTTPS_PORT}
      - VITE_PUBLIC_API_BASE_URL=${VITE_PUBLIC_API_BASE_URL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "orgs.openmined.syft=this is a syft frontend container"

  # redis:
  #   restart: always
  #   image: redis:${REDIS_VERSION?Variable not set}
  #   volumes:
  #     - app-redis-data:/data
  #     - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  #   environment:
  #     - SERVICE_NAME=redis
  #     - RELEASE=${RELEASE:-production}
  #   env_file:
  #     - .env

  # queue:
  #   restart: always
  #   image: rabbitmq:3
  #   environment:
  #     - SERVICE_NAME=queue
  #     - RELEASE=${RELEASE:-production}
  #   volumes:
  #     - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  worker:
    restart: always
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${VERSION-latest}"
    profiles:
      - worker
    env_file:
      - .env
    environment:
      - SERVICE_NAME=worker
      - RELEASE=${RELEASE:-production}
      - VERSION=${VERSION}
      - VERSION_HASH=${VERSION_HASH}
      - NODE_TYPE=${NODE_TYPE?Variable not set}
      - NODE_NAME=${NODE_NAME?Variable not set}
      - STACK_API_KEY=${STACK_API_KEY}
      - PORT=${HTTP_PORT}
      - IGNORE_TLS_ERRORS=${IGNORE_TLS_ERRORS?False}
      - HTTP_PORT=${HTTP_PORT}
      - HTTPS_PORT=${HTTPS_PORT}
      - USE_BLOB_STORAGE=${USE_BLOB_STORAGE}
      - CONTAINER_HOST=${CONTAINER_HOST}
      - TRACE=False # TODO: Trace Mode is set to False, until jaegar is integrated
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - ASSOCIATION_TIMEOUT=${ASSOCIATION_TIMEOUT}
      - DEV_MODE=${DEV_MODE}
      - NODE_SIDE_TYPE=${NODE_SIDE_TYPE}
      - ENABLE_WARNINGS=${ENABLE_WARNINGS}
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    volumes:
      - credentials-data:/root/data/creds/
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "orgs.openmined.syft=this is a syft worker container"

  backend:
    restart: always
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${VERSION-latest}"
    profiles:
      - backend
    depends_on:
      - proxy
    env_file:
      - .env
    environment:
      - SERVICE_NAME=backend
      - RELEASE=${RELEASE:-production}
      - VERSION=${VERSION}
      - VERSION_HASH=${VERSION_HASH}
      - NODE_TYPE=${NODE_TYPE?Variable not set}
      - NODE_NAME=${NODE_NAME?Variable not set}
      - STACK_API_KEY=${STACK_API_KEY}
      - PORT=8001
      - IGNORE_TLS_ERRORS=${IGNORE_TLS_ERRORS?False}
      - HTTP_PORT=${HTTP_PORT}
      - HTTPS_PORT=${HTTPS_PORT}
      - USE_BLOB_STORAGE=${USE_BLOB_STORAGE}
      - CONTAINER_HOST=${CONTAINER_HOST}
      - TRACE=${TRACE}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - ASSOCIATION_TIMEOUT=${ASSOCIATION_TIMEOUT}
      - DEV_MODE=${DEV_MODE}
      - DOMAIN_CONNECTION_PORT=${DOMAIN_CONNECTION_PORT}
      - ENABLE_OBLV=${ENABLE_OBLV}
      - DEFAULT_ROOT_EMAIL=${DEFAULT_ROOT_EMAIL}
      - DEFAULT_ROOT_PASSWORD=${DEFAULT_ROOT_PASSWORD}
    network_mode: service:proxy
    volumes:
      - ${CREDENTIALS_VOLUME}:/root/data/creds/
    stdin_open: true
    tty: true
    labels:
      - "orgs.openmined.syft=this is a syft backend container"

  # backend_stream:
  #   restart: always
  #   image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${VERSION-latest}"
  #   depends_on:
  #     - proxy
  #   env_file:
  #     - .env
  #   environment:
  #     - SERVICE_NAME=backend_stream
  #     - RELEASE=${RELEASE:-production}
  #     - VERSION=${VERSION}
  #     - VERSION_HASH=${VERSION_HASH}
  #     - NODE_TYPE=${NODE_TYPE?Variable not set}
  #     - DOMAIN_NAME=${DOMAIN_NAME?Variable not set}
  #     - STACK_API_KEY=${STACK_API_KEY}
  #     - PORT=8011
  #     - STREAM_QUEUE=1
  #     - IGNORE_TLS_ERRORS=${IGNORE_TLS_ERRORS?False}
  #     - HTTP_PORT=${HTTP_PORT}
  #     - HTTPS_PORT=${HTTPS_PORT}
  #     - USE_BLOB_STORAGE=${USE_BLOB_STORAGE}
  #     - CONTAINER_HOST=${CONTAINER_HOST}
  #     - TRACE=${TRACE}
  #     - JAEGER_HOST=${JAEGER_HOST}
  #     - JAEGER_PORT=${JAEGER_PORT}
  #     - DEV_MODE=${DEV_MODE}
  #     - DOMAIN_CONNECTION_PORT=${DOMAIN_CONNECTION_PORT}
  #     - ENABLE_OBLV=${ENABLE_OBLV}
  #   network_mode: service:proxy
  #   volumes:
  #     - credentials-data:/root/data/creds/

  # celeryworker:
  #   restart: always
  #   image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${VERSION-latest}"
  #   depends_on:
  #     - proxy
  #     - queue
  #   env_file:
  #     - .env
  #   environment:
  #     - SERVICE_NAME=celeryworker
  #     - RELEASE=${RELEASE:-production}
  #     - VERSION=${VERSION}
  #     - VERSION_HASH=${VERSION_HASH}
  #     - NODE_TYPE=${NODE_TYPE?Variable not set}
  #     - DOMAIN_NAME=${DOMAIN_NAME?Variable not set}
  #     - C_FORCE_ROOT=1
  #     - STACK_API_KEY=${STACK_API_KEY}
  #     - IGNORE_TLS_ERRORS=${IGNORE_TLS_ERRORS?False}
  #     - HTTP_PORT=${HTTP_PORT}
  #     - HTTPS_PORT=${HTTPS_PORT}
  #     - USE_BLOB_STORAGE=${USE_BLOB_STORAGE}
  #     - CONTAINER_HOST=${CONTAINER_HOST}
  #     - NETWORK_CHECK_INTERVAL=${NETWORK_CHECK_INTERVAL}
  #     - DOMAIN_CHECK_INTERVAL=${DOMAIN_CHECK_INTERVAL}
  #     - TRACE=${TRACE}
  #     - JAEGER_HOST=${JAEGER_HOST}
  #     - JAEGER_PORT=${JAEGER_PORT}
  #     - DEV_MODE=${DEV_MODE}
  #     - DOMAIN_CONNECTION_PORT=${DOMAIN_CONNECTION_PORT}
  #     - ENABLE_OBLV=${ENABLE_OBLV}
  #   command: "/app/grid/worker-start.sh"
  #   network_mode: service:proxy
  #   volumes:
  #     - credentials-data:/storage

  seaweedfs:
    profiles:
      - blob-storage
    depends_on:
      - proxy
    image: "${DOCKER_IMAGE_SEAWEEDFS?Variable not set}:${SEAWEEDFS_VERSION}"
    environment:
      - S3_VOLUME_SIZE_MB=${S3_VOLUME_SIZE_MB:-1024}
      - S3_ROOT_USER=${S3_ROOT_USER:-admin}
      - S3_ROOT_PWD=${S3_ROOT_PWD:-admin}
      - S3_PORT=${S3_PORT:-8888}
    entrypoint: ["/bin/sh"]
    command:
      - "/etc/seaweedfs/start.sh"
    volumes:
      - seaweedfs-data:/data/blob
      - seaweedfs-data-2:/data
      - ./seaweedfs/filer.toml:/etc/seaweedfs/filer.toml
      - ./seaweedfs/start.sh:/etc/seaweedfs/start.sh
    labels:
      - "orgs.openmined.syft=this is a syft seaweedfs container"

  mongo:
    image: "${MONGO_IMAGE}:${MONGO_VERSION}"
    profiles:
      - mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - mongo-config-data:/data/configdb
    labels:
      - "orgs.openmined.syft=this is a syft mongo container"

  jaeger:
    profiles:
      - telemetry
    image: jaegertracing/all-in-one:1.37
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${JAEGER_PORT}:14268" # http collector
      - "16686" # ui
      # - "6831:6831/udp"
      # - "6832:6832/udp"
      # - "5778:5778"
      # - "4317:4317"
      # - "4318:4318"
      # - "14250:14250"
      # - "14269:14269"
      # - "9411:9411"
    volumes:
      - jaeger-data:/tmp
    labels:
      - "orgs.openmined.syft=this is a syft jaeger container"

volumes:
  credentials-data:
  # app-redis-data:
  seaweedfs-data:
    labels:
      orgs.openmined.syft: "this is a syft seaweedfs volume"
  seaweedfs-data-2:
    labels:
      orgs.openmined.syft: "this is a syft seaweedfs volume"
  mongo-data:
    labels:
      orgs.openmined.syft: "this is a syft mongo volume"
  mongo-config-data:
    labels:
      orgs.openmined.syft: "this is a syft mongo volume"
  jaeger-data:
    labels:
      orgs.openmined.syft: "this is a syft jaeger volume"

networks:
  traefik-public:
    # Allow setting it to false for testing
    external: ${TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL-true}
