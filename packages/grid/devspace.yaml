version: v2beta1
name: syft

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev --all              # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all
      ensure_pull_secrets --all
      build_images --all
      create_deployments --all

vars:
  DEVSPACE_ENV_FILE: "default.env"
  CONTAINER_REGISTRY: "docker.io"
  NODE_NAME: "mynode"
  VERSION: "0.8.4-beta.3"

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  backend:
    image: "${CONTAINER_REGISTRY}/${DOCKER_IMAGE_BACKEND}"
    buildKit: {}
    dockerfile: ./backend/backend.dockerfile
    context: ../
    tags:
      - dev-latest
      - "${VERSION}"
      - "${devspace.git.commit}"
  frontend:
    image: "${CONTAINER_REGISTRY}/${DOCKER_IMAGE_FRONTEND}"
    buildKit:
      args: ["--target", "grid-ui-production"]
    dockerfile: ./frontend/frontend.dockerfile
    target: "grid-ui-production"
    context: ./frontend
    tags:
      - dev-latest
      - "${VERSION}"
      - "${devspace.git.commit}"
  seaweedfs:
    image: "${CONTAINER_REGISTRY}/${DOCKER_IMAGE_SEAWEEDFS}"
    buildKit: {}
    buildArgs:
      SEAWEEDFS_VERSION: ${SEAWEEDFS_VERSION}
    dockerfile: ./seaweedfs/seaweedfs.dockerfile
    context: ./seaweedfs
    tags:
      - dev-latest
      - "${VERSION}"
      - "${devspace.git.commit}"

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  syft:
    helm:
      chart:
        name: ./helm/syft
      values:
        container:
          registry: ${CONTAINER_REGISTRY}
          syft_version: "dev-latest"
        node:
          settings:
            nodeName: ${NODE_NAME}
            nodeType: "domain"
        configuration:
          devmode: True

dev:
  mongo:
    imageSelector: "${MONGO_IMAGE}:${MONGO_VERSION}"
    ports:
      - port: "27017"
  seaweedfs:
    imageSelector: "${CONTAINER_REGISTRY}/${DOCKER_IMAGE_SEAWEEDFS}"
    ports:
      - port: "9333" # admin
      - port: "8888" # filer
      - port: "8333" # S3
      - port: "4001" # mount azure
  backend:
    imageSelector: "${CONTAINER_REGISTRY}/${DOCKER_IMAGE_BACKEND}"
    env:
      - name: DEV_MODE
        value: "True"
    logs: {}
    sync:
      - path: ./backend/grid:/root/app/grid
      - path: ../syft:/root/app/syft

profiles:
  - name: gateway
    patches:
      - op: replace
        path: deployments.syft.helm.values.node.settings.nodeType
        value: "gateway"

commands:
  start:
    command: |-
      tox -e dev.k8s.start
  deploy:
    command: |-
      devspace deploy --kube-context k3d-syft-dev --namespace syft --var CONTAINER_REGISTRY=k3d-registry.localhost:12345
  dev:
    command: |-
      devspace dev --kube-context k3d-syft-dev --namespace syft --var CONTAINER_REGISTRY=k3d-registry.localhost:12345
  info:
    command: |-
      tox -e dev.k8s.info
