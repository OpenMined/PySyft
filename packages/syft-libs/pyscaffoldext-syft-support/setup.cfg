# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = pyscaffoldext-syft-support
description = Add a short description here!
author = OpenMined
author_email = info@openmined.org
license = Apache-2.0
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/OpenMined/PySyft
# Add here related links, for example:
project_urls =
#    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    pyscaffold>=4.0,<5.0a0
    pyscaffoldext-markdown
    typing-inspect
    nbformat
    jupyter


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install pyscaffoldext-syft-support[PDF]` like:
# PDF = ReportLab; RXP

[options.package_data]
* = templates/*.template

# Add here test requirements (semicolon/line-separated)
testing =
    tox
    pre-commit
    #setuptools_scm
    virtualenv
    configupdater
    pytest
    pytest-cov
    pytest-xdist

[options.entry_points]
pyscaffold.cli =
    syft_support = pyscaffoldext.syft_support.extension:SyftSupport
# Add here console scripts like:
# console_scripts =
#     script_name = pyscaffoldext.syft_support.module:function
# For example:
# console_scripts =
#     fibonacci = pyscaffoldext.syft_support.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 120
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

max-complexity = 11
show-source = true
statistics = true
count = true

[isort]
profile=black
force_single_line=True
known_syft=syft
remove_redundant_aliases=True
sections=FUTURE,STDLIB,THIRDPARTY,SYFT,LOCALFOLDER
default_section=THIRDPARTY
lines_between_types=0
import_heading_future=future
import_heading_stdlib=stdlib
import_heading_thirdparty=third party
import_heading_syft=syft absolute
import_heading_localfolder=syft relative
ignore_comments=False
force_grid_wrap=True
honor_noqa=True

[darglint]
style=google # Default style is Google but we opt to be explicit about it

[mypy]
python_version = 3.9

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.2
package = syft_support
extensions =
    cirrus
    custom_extension
    markdown
    namespace
    no_skeleton
    pre_commit
namespace = pyscaffoldext
