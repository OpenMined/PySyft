{
    "modules": [
        "xgboost.callback",
        "xgboost.compat",
        "xgboost.config",
        "xgboost.core",
        "xgboost.dask",
        "xgboost.data",
        "xgboost.libpath",
        "xgboost.plotting",
        "xgboost.rabit",
        "xgboost.sklearn",
        "xgboost.tracker",
        "xgboost.training"
    ],
    "class": [
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor",
        "xgboost.Booster",
        "xgboost.DMatrix",
        "xgboost.DeviceQuantileDMatrix",
        "xgboost.RabitTracker",
        "xgboost.XGBClassifier",
        "xgboost.XGBModel",
        "xgboost.XGBRFClassifier",
        "xgboost.XGBRFRegressor",
        "xgboost.XGBRanker",
        "xgboost.XGBRegressor"
    ],
    "lib": "xgboost",
    "methods": {
        "DMatrix.set_info": "NoneType",
        "DMatrix.slice": "DMatrix",
        "XGBClassifier._get_iteration_range": "tuple",
        "XGBClassifier._set_evaluation_result": "NoneType",
        "Booster.num_boosted_rounds": "int",
        "Booster.predict": "ndarray",
        "XGBRFClassifier.apply": "ndarray",
        "XGBClassifier._get_type": "str",
        "XGBClassifier.apply": "ndarray",
        "XGBModel._set_evaluation_result": "NoneType",
        "XGBClassifier._configure_fit": "tuple",
        "XGBRFRegressor.apply": "ndarray",
        "XGBClassifier.predict_proba": "ndarray",
        "XGBRFClassifier._configure_fit": "tuple",
        "XGBRFRegressor._get_type": "str",
        "XGBRanker._get_type": "str",
        "XGBRanker._can_use_inplace_predict": "bool",
        "XGBRegressor._get_type": "str",
        "XGBModel._configure_fit": "tuple",
        "XGBModel._can_use_inplace_predict": "bool",
        "XGBRFRegressor._can_use_inplace_predict": "bool",
        "DeviceQuantileDMatrix.set_info": "NoneType",
        "XGBRanker._get_iteration_range": "tuple",
        "XGBModel._get_iteration_range": "tuple",
        "XGBRFClassifier._get_iteration_range": "tuple",
        "XGBRFClassifier._set_evaluation_result": "NoneType",
        "DeviceQuantileDMatrix.slice": "DMatrix",
        "XGBRegressor.apply": "ndarray",
        "XGBRFRegressor._get_iteration_range": "tuple",
        "XGBRanker.fit": "XGBRanker",
        "XGBRegressor._set_evaluation_result": "NoneType",
        "XGBRanker.apply": "ndarray",
        "XGBRanker._configure_fit": "tuple",
        "XGBModel.apply": "ndarray",
        "XGBRegressor._get_iteration_range": "tuple",
        "DMatrix.__init__": "NoneType",
        "Booster._set_feature_info": "NoneType",
        "XGBRFClassifier._can_use_inplace_predict": "bool",
        "XGBRanker._set_evaluation_result": "NoneType",
        "XGBRFClassifier._get_type": "str",
        "XGBRFRegressor._set_evaluation_result": "NoneType",
        "XGBClassifier._can_use_inplace_predict": "bool",
        "XGBRegressor._can_use_inplace_predict": "bool",
        "XGBRFClassifier.predict_proba": "ndarray",
        "Booster.num_features": "int",
        "XGBModel._get_type": "str",
        "XGBRegressor._configure_fit": "tuple",
        "XGBRFRegressor._configure_fit": "tuple"
    }
}