[metadata]
name = syft
version = attr: "0.8.1-beta.6"
description = Perform numpy-like analysis on data that remains in someone elses server
author = OpenMined
author_email = info@openmined.org
license = Apache-2.0
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://openmined.github.io/PySyft/
project_urls =
    Source=https://github.com/OpenMined/PySyft
    Tracker=https://github.com/OpenMined/PySyft/issues
platforms = any
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
# Add here dependencies of your project (semicolon/line-separated), e.g.
syft =
    astunparse==1.6.3
    bcrypt==4.0.1
    forbiddenfruit==0.1.4
    gevent==22.10.2
    gipc==1.5.0
    jax==0.4.10
    jaxlib==0.4.10
    loguru==0.7.0
    networkx==2.8
    numpy==1.24.3
    opendp==0.6.2
    packaging>=21.0
    pandas==1.5.3
    pyarrow==11.0.0
    pycapnp==1.3.0
    pydantic[email]==1.10.7
    pymongo==4.3.3
    pynacl==1.5.0
    pyzmq==23.2.1
    redis==4.5.4
    requests==2.29.0
    RestrictedPython==6.0
    result==0.9.0
    tqdm==4.65.0
    typeguard==2.13.3
    typing_extensions==4.5.0
    sherlock[redis,filelock]==0.4.1
    uvicorn[standard]==0.21.1
    fastapi==0.95.1
    hagrid>=0.3
    matplotlib==3.7.1
    dm-haiku==0.0.9

telemetry =
    opentelemetry-api==1.14.0
    opentelemetry-sdk==1.14.0
    opentelemetry-exporter-jaeger==1.14.0
    opentelemetry-instrumentation==0.35b0
    opentelemetry-instrumentation-requests==0.35b0
    ; opentelemetry-instrumentation-digma==0.9.0

install_requires =
    %(syft)s
    %(telemetry)s

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.9

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
dev =
    %(test_plugins)s
    bandit==1.7.5
    ruff==0.0.254
    importlib-metadata==6.0.0
    isort==5.12.0
    mypy==1.1.1
    pre-commit==3.1.1
    safety==2.3.5

test_plugins =
    pytest
    pytest-cov
    pytest-xdist[psutil]
    pytest-parallel
    pytest-asyncio
    pytest-randomly
    pytest-sugar
    pytest_mock_resources
    python_on_whales
    pytest-lazy-fixture
    pytest-rerunfailures
    coverage
    joblib
    faker

oblv =
    oblv-ctl==0.3.1

[options.entry_points]
console_scripts =
    syft=syft.node.run:run

[test]
addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command-line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
filterwarnings =
    ignore:.*Deprecated.*:DeprecationWarning
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    flaky: mark tests that might fail from network unpredictable errors

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
# TODO: C901 Complex function, (gmuraru) I think we should fix this
ignore =
    N805
    W503
    C901
    B001
    B002
    B003
    B004
    B005
    B007
    B008
    B009
    B010
    B011
    B012
    B013
    B014
    B015
    B016
    B017
    B018
    B019
    B020
    B021
    B022
    B023
    B024
    B027
    B026
    B028

max-line-length = 120
exclude =
    .tox
    build
    dist
    .git
    .eggs
    docs/conf.py
    __pycache__
    venv

max-complexity = 11
show-source = true
statistics = true
count = true

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = syft
extensions =
    markdown

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
        syft
data_files =
    img = img/*

[mypy]
python_version = 3.11
