[metadata]
name = syft
version = attr: "0.8.0-beta.0"
description = Perform numpy-like analysis on data that remains in someone elses server
author = OpenMined
author_email = info@openmined.org
license = Apache-2.0
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://openmined.github.io/PySyft/
project_urls =
    Source=https://github.com/OpenMined/PySyft
    Tracker=https://github.com/OpenMined/PySyft/issues
platforms = any
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
# Add here dependencies of your project (semicolon/line-separated), e.g.
syft =
    ascii_magic==1.6
    bcrypt==4.0.1
    boto3==1.26.51
    cachetools>=3.1
    flax==0.5.3
    forbiddenfruit==0.1.4
    gevent==21.12.0
    gipc==1.4.0
    jax==0.3.14
    jaxlib==0.3.14
    loguru==0.6.0
    matplotlib==3.6.3
    names==0.3.0
    numpy>=1.21.6 # tensorflow-federated
    opendp==0.6.2
    packaging>=21.0
    pandas==1.5.2
    protobuf==3.19.5 # tensorflow-federated
    pyarrow==11.0.0
    pycapnp==1.3.0
    pydantic[email]==1.10.4
    pyjwt==2.6.0
    pymongo-inmemory==0.2.8
    pymongo==4.2.0
    pympler==1.0.1
    pynacl==1.5.0
    pyoblv==0.1.2
    redis==4.4.2
    requests_toolbelt==0.10.1
    requests==2.28.2
    RestrictedPython==6.0
    result==0.9.0
    torch>=1.11.0,<=1.13.1
    tqdm==4.64.0
    typeguard==2.13.3
    typing_extensions==4.4.0

telemetry =
    opentelemetry-api==1.14.0
    opentelemetry-sdk==1.14.0
    opentelemetry-exporter-jaeger==1.14.0
    opentelemetry-instrumentation==0.35b0
    opentelemetry-instrumentation-requests==0.35b0
    ; opentelemetry-instrumentation-digma==0.9.0

install_requires =
    %(syft)s
    %(telemetry)s

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.7

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
dev =
    %(test_plugins)s
    bandit==1.7.4
    black-nb==0.7
    black==22.12.0
    doc8==1.1.1
    faker==16.6.0
    flake8==6.0.0
    importlib-metadata==6.0.0
    isort==5.11.4
    mypy==0.991
    pre-commit==2.21.0
    safety==2.3.5

test_plugins =
    pytest==7.2.0
    pytest-cov
    pytest-xdist[psutil]
    pytest-asyncio
    pytest-benchmark
    pytest-custom_exit_code
    pytest-randomly
    pytest-sugar
    coverage

tff =
    tensorflow-federated==0.40.0

[test]
addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command-line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
filterwarnings =
    ignore:.*Deprecated.*:DeprecationWarning


[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
# TODO: C901 Complex function, (gmuraru) I think we should fix this
ignore =
    N805
    W503
    C901
    B001
    B002
    B003
    B004
    B005
    B007
    B008
    B009
    B010
    B011
    B012
    B013
    B014
    B015
    B016
    B017
    B018
    B019
    B020
    B021
    B022
    B023
    B024
    B027
    B026
    B028

max-line-length = 120
exclude =
    .tox
    build
    dist
    .git
    .eggs
    docs/conf.py
    __pycache__
    venv
    src/syft/notebooks/examples*

max-complexity = 11
show-source = true
statistics = true
count = true

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = syft
extensions =
    markdown

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
        syft
data_files =
    img = img/*

[mypy]
python_version = 3.10
