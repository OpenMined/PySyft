[metadata]
name = syft
description = PySyft is a Python library for secure and private Deep Learning, allowing you to compute on data you do not own and cannot see
author = OpenMined
author_email = info@openmined.org
license = Apache-2.0
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/OpenMined/PySyft
project_urls =
    Documentation = https://github.com/OpenMined/PySyft
platforms = any
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
# Add here dependencies of your project (semicolon/line-separated), e.g.

torch_ecosystem =
    torch>=1.4.0,<=1.8.1
    torchcsprng<=0.2.1
    torchvision>=0.5,<=0.9.1

syft =
    %(torch_ecosystem)s #should remove this and make it a lib
    aiortc
    cachetools
    cryptography>=3.4.7
    dpcontracts
    flask>=1.1.2,<2.0.0
    forbiddenfruit>=0.1.3
    loguru
    names
    nest_asyncio
    packaging
    pandas
    protobuf
    pyarrow
    PyJWT==1.7.1
    PyNaCl
    PyYAML>=5.4.1
    requests
    scikit-learn
    requests_toolbelt
    sqlitedict
    syft-proto
    typing-extensions # backport to older python 3
    websocket-client
    wrapt

install_requires =
    %(syft)s


# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.7

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
all =
    %(dev)s
    %(libs)s


libs_deps =
    fsspec
    msgpack
    patsy
    sycret>=0.1.3
    tensorboard
    tqdm

libs =
    %(libs_deps)s
    gym
    numpy
    opacus
    openmined.psi
    pandas
    petlib
    pillow>=8.1.2,<=8.2.0 #security-issues
    python-dp
    statsmodels
    tenseal
    xgboost>=1.4
    zksk


dev =
    %(test_plugins)s
    flask
    pandas
    pre-commit
    protobuf
    PyJWT==1.7.1
    PyNaCl
    bandit
    black
    black-nb
    darglint
    doc8
    flake8
    isort
    matplotlib
    nbconvert
    nbformat
    protoc-wheel-0
    safety
    syft-proto
    typing-extensions
    sqlitedict


test_plugins =
    pytest
    pytest-cov
    pytest-xdist[psutil]
    pytest-asyncio
    pytest-benchmark
    pytest-custom_exit_code
    pytest-randomly
    pytest-sugar
    pytest-xprocess

ci-all =
    %(dev)s
    %(ci-libs)s
    %(ci-grid)s

ci-libs =
    %(libs_deps)s
;    gym  #install-custom-dependency
;    numpy #install-custom-dependency
;    opacus #install-custom-dependency
;    openmined.psi #install-custom-dependency
;    petlib #install-custom-dependency
;    pillow>=8.1.2,<=8.2.0 #install-custom-dependency
;    pyarrow #install-custom-dependency
;    python-dp #install-custom-dependency
;    statsmodels #install-custom-dependency
;    tenseal #install-custom-dependency
;    xgboost>=1.4 #install-custom-dependency
;    zksk #install-custom-dependency

ci-grid =
    bcrypt
    boto3
    flask>=1.1.2,<2.0.0
    flask_cors
    flask_executor
    flask_migrate
    flask_sockets
    flask_sqlalchemy
    names
    PyInquirer
    python-dp
    requests_toolbelt
    scipy
    sqlalchemy>=1.4
    sqlalchemy_mixins
    sqlalchemy_utils
    terrascript
    Werkzeug>=1.0.1,<2.0.0


[options.entry_points]
console_scripts =
    syft-device=syft.grid.example_nodes.device:run
    syft-domain=syft.grid.example_nodes.domain:run
    syft-network=syft.grid.example_nodes.network:run
    syft-proto=syft.protobuf_setuptools:run

[test]
addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command-line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
filterwarnings =
    ignore:.*Deprecated.*:DeprecationWarning


[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
ignore =
    N805
    W503
    C901 # TODO: Complex function, (gmuraru) I think we should fix this
max-line-length = 120
exclude =
    .tox
    build
    dist
    .git
    .eggs
    docs/conf.py
    __pycache__
    venv
    src/syft/proto
    src/syft/notebooks/examples*

max-complexity = 11
show-source = true
statistics = true
count = true

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = syft
extensions =
    markdown

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
        syft
data_files =
    img = img/*

[isort]
profile=black
force_single_line=True
known_syft=syft
remove_redundant_aliases=True
sections=FUTURE,STDLIB,THIRDPARTY,SYFT,LOCALFOLDER
default_section=THIRDPARTY
lines_between_types=0
force_sort_within_sections=True
import_heading_future=future
import_heading_stdlib=stdlib
import_heading_thirdparty=third party
import_heading_syft=syft absolute
import_heading_localfolder=syft relative
ignore_comments=False
force_grid_wrap=True
honor_noqa=True

[darglint]
style=google # Default style is Google but we opt to be explicit about it

[mypy]
python_version = 3.9
