# see: https://pypi.org/project/ConfigArgParse/ for file format overview
# before running aca-py, run the following (the commands are embedded below, next to the related parameters):
#    - run a local postgres database
#    - run a local instance of von-network
#    - register your did (seed) on the network
# run aca-py as:
#    ACAPY_WALLET_SEED=my_seed_000000000000000000000000 ACAPY_WALLET_KEY=key ./bin/aca-py start --arg-file ./demo/local-indy-args.yaml

log-level: info
genesis-url: !ENV ${GENESIS_URL}
# Admin insecure mode and api key will come from the following two variables
# which is parsed and used automatically by ACA-Py
# ACAPY_ADMIN_API_KEY
# ACAPY_ADMIN_INSECURE_MODE
admin: [0.0.0.0, !ENV "${ADMIN_PORT}"]
label: !ENV ${AGENT_NAME}
# the following is the callback url for your controller
webhook-url: !ENV ${WEBHOOK_URL}
# assumes you are running a local von-network, like:
#    cd von-network
#    ./manage start <my local ip>
inbound-transport:
  - [http, 0.0.0.0, !ENV "${HTTP_PORT}"]
#   - [ws, 0.0.0.0, !ENV '${HTTP_PORT}']
outbound-transport: http
# the following is the public endpoint advertised by the agent
endpoint: !ENV ${AGENT_ENDPOINT}
auto-ping-connection: true
# register your did using (this example is for von-network):
#    curl -d '{"seed":"my_seed_000000000000000000000000", "role":"TRUST_ANCHOR", "alias":"My Agent"}' -X POST http://localhost:9000/register
# note that the env var name is configured in argparse.py
# seed = comes from ACAPY_WALLET_SEED
wallet-type: !ENV ${WALLET_TYPE}
wallet-name: !ENV ${WALLET_NAME}
wallet-key: !ENV ${WALLET_KEY}
seed: !ENV ${WALLET_SEED}

## run a local postgres (docker) like:
##    docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d -p 5432:5432 postgres:10
#wallet-storage-type: postgres_storage
## could be sent using env var ACAPY_WALLET_STORAGE_CONFIG
#wallet-storage-config: '{"url":"localhost:5432","max_connections":5}'
## could be sent using env var ACAPY_WALLET_STORAGE_CREDS
#wallet-storage-creds: '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'

auto-accept-requests: true
auto-respond-credential-proposal: true
auto-respond-credential-offer: true
auto-respond-credential-request: true
auto-store-credential: true
auto-respond-presentation-proposal: true
auto-respond-presentation-request: true
preserve-exchange-records: true
debug-connections: true
debug-credentials: true
debug-presentations: true
enable-undelivered-queue: true
