# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = syft
description = Add a short description here!
author = OpenMined
author-email = andrew@openmined.org
license = Apache 2.0
long-description = file: README.md
long-description-content-type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/pyscaffold/pyscaffold/
project-urls =
    Documentation = https://pyscaffold.org/
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.2a0,<3.3a0
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    aiortc
    dataclasses
    dpcontracts
    flask
    forbiddenfruit>=0.1.3
    loguru
    nest_asyncio
    packaging
    pandas
    protobuf
    PyNaCl
    requests
    sqlitedict
    torch>=1.5
    torchvision
    typeguard
    typing-extensions
    websockets

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.6

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install syft[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    dataclasses
    flask
    pandas
    protobuf
    PyNaCl
    pytest
    pytest-cov
    pytest-xdist[psutil]
    sqlitedict
    typing-extensions
    websockets

[options.entry_points]
# Add here console scripts like:
console_scripts =
    syft-device=syft.grid.example_nodes.device:run
    syft-domain=syft.grid.example_nodes.domain:run
    syft-network=syft.grid.example_nodes.network:run
    syft-proto=syft.protobuf_setuptools:run
# For example:
; console_scripts =
;fibonacci=syft.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command-line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# TODO (gmuraru) change cov-fail-under as soon as possible
addopts =
    --cov syft --cov-report term-missing --cov-fail-under 82 --no-cov-on-fail
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
ignore =
    N805
    W503
    C901 # TODO: Complex function, (gmuraru) I think we should fix this
max-line-length = 120
exclude =
    .tox
    build
    dist
    .git
    .eggs
    docs/conf.py
    __pycache__
    venv
    src/syft/proto

max-complexity = 11
show-source = true
statistics = true
count = true

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.2.3
package = syft
extensions =
    markdown

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
        syft
data_files =
    img = img/*

[isort]
profile=black
force_single_line=True
known_syft=syft
remove_redundant_aliases=True
sections=FUTURE,STDLIB,THIRDPARTY,SYFT,LOCALFOLDER
default_section=THIRDPARTY
lines_between_types=0
force_sort_within_sections=True
import_heading_future=future
import_heading_stdlib=stdlib
import_heading_thirdparty=third party
import_heading_syft=syft absolute
import_heading_localfolder=syft relative
ignore_comments=False
force_grid_wrap=True
honor_noqa=True
