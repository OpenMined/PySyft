[tox]
envlist = jupyter,lint,grid.domain,syft.test.fast,tox-ci,syft.precommit,grid.precommit
requires =
    tox-pyenv
    tox-run-before
setupdir = {toxinidir}/packages/syft
# Exclusively use Python commands from pyenv's copies of Python, don't fall
# back to tox's default non-pyenv command search strategy.
tox_pyenv_fallback = False

[testenv]
run_before =
    python scripts/bootstrap.py
    cat .python-version | xargs -I \{\} pyenv install --skip-existing \{\}
changedir = {toxinidir}/packages/syft
usedevelop = True
deps = {toxinidir}/packages/syft[ci-all]

commands =
    python --version

[testenv:syft.lint]
changedir = {toxinidir}/packages/syft
basepython = python3.9
deps = 
    jupyter
    black
    isort
    protoc-wheel-0
    pre-commit
commands = 
    {toxinidir}/packages/syft/scripts/build_proto.sh
    black .
    isort .
    pre-commit run --all-files

[testenv:syft.precommit]
changedir = {toxinidir}/packages/syft
basepython = python3.9
deps =
    jupyter
    black
    isort
    pre-commit

commands =
    {toxinidir}/packages/syft/scripts/build_proto.sh
    pre-commit run --all-files

[testenv:grid.precommit]
changedir = {toxinidir}/packages/grid
basepython = python3.9
deps =
    jupyter
    black
    isort
    pre-commit
commands =
    pre-commit run --all-files --config  packages/grid/.pre-commit-config.yaml



[testenv:jupyter]
basepython = python3.9
deps = jupyter
commands =
    python --version
    jupyter notebook --ip 0.0.0.0

[testenv:grid.domain]
basepython = python3.9
changedir = {toxinidir}/packages/grid/apps/domain
deps = poetry
commands =
    python --version
    poetry install
    ./dev.sh

[testenv:syft.test.fast]
basepython = python3.9
deps =
    pytest
    pytest-xdist[psutil]
    pytest-xprocess

changedir = {toxinidir}/packages/syft
commands =
    nosetests {posargs:--with-coverage}
    pip install -e .[all]
    python --version
    pip list
    pytest -m fast -n auto







; [testenv:syft.test.unit]
; deps = pytest
; commands =
;     python --version
;     pytest -m 'fast or slow' -n auto
;     ; test-libs: pip install -r requirements.unstable.txt
;     ; test-libs: pytest -m libs --co --durations=50
;     ; test-libs: pytest -m libs -n auto -k "not tenseal" --suppress-no-test-exit-code --durations=50
;     ; test-libs: pytest -m libs -n 1 -k "tenseal" --suppress-no-test-exit-code --durations=50
;     ; test-nb: python ./scripts/mnist.py
;     ; test-nb: python ./scripts/nb_duet_test.py
;     ; test-nb: pytest -m duet -n 1 --suppress-no-test-exit-code --durations=50
;     ; security: bandit -r src
;     ; security: safety check

; [testenv:grid.test.unit]
; changedir = {toxinidir}/packages/syft
; commands =
;     pytest ../grid/apps/domain/tests --durations=50
;     pytest ../grid/apps/network/tests --durations=50
;     pytest ../grid/apps/worker/tests --durations=50

; [testenv:grid.test.int]
; changedir = {toxinidir}/packages/syft
; commands =
;     python ./scripts/mnist.py
;     pytest -m grid -p no:randomly -p no:xdist
