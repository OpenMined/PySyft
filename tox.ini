[tox]
envlist =
    lint
    syft.jupyter
    syft.test.fast
    syft.test.security
    syft.test.libs
    ; syft.test.duet
    stack.test.integration
    grid.test.backend
requires =
    tox-pyenv
    tox-run-command
    pip >= 21.2.1
skipsdist = True


[testenv]
basepython = python3
deps = pip
commands =
    python --version

[testenv:lint]
; setupdir = {toxinidir}
; changedir = {toxinidir}
description = Linting
allowlist_externals =
    bash
deps =
    black[python2]
    isort
    protoc-wheel-0
    pre-commit
commands =
    bash -c "cd {toxinidir}/packages/syft; ./scripts/build_proto.sh"
    black .
    isort .
    pre-commit run --all-files


# Syft
[testenv:syft]
deps =
    -e{toxinidir}/packages/syft[all]
    -r{toxinidir}/packages/syft/requirements.unstable.txt
changedir = {toxinidir}/packages/syft
description = Syft
commands =
    pip list

[testenv:syft.jupyter]
description = Jupyter Notebook with Editable Syft
deps =
    {[testenv:syft]deps}
    jupyter
commands =
    pip install prompt-toolkit jupyter jupyterlab --upgrade # overrides grid deps in setup.cfg which break jupyter
    jupyter lab --ip 0.0.0.0

[testenv:syft.test.fast]
description = Syft Unit Tests Fast
deps =
    {[testenv:syft]deps}
changedir = {toxinidir}/packages/syft
commands =
    pip list
    pytest -m fast -n auto

[testenv:syft.test.security]
description = Security Checks for Syft
changedir = {toxinidir}/packages/syft
deps =
    {[testenv:syft]deps}
commands =
    pip install --upgrade pip
    bandit -r src
    safety check

[testenv:syft.test.libs]
description = Supported Library Tests for Syft
deps =
    {[testenv:syft]deps}
changedir = {toxinidir}/packages/syft
commands =
    pytest -m libs -n auto -k "not tenseal" --suppress-no-test-exit-code
    pytest -m libs -n 1 -k "tenseal" --suppress-no-test-exit-code

; [testenv:syft.test.duet]
; description = Duet Integration Tests for Syft
; deps =
;     {[testenv:syft]deps}
; changedir = {toxinidir}/packages/syft
; commands =
;     python ./scripts/mnist.py
;     python ./scripts/nb_duet_test.py
;     pytest -m duet -n 1 --suppress-no-test-exit-code


[testenv:stack.test.integration]
description = Integration Tests for Core Stack
deps =
    pytest
    requests
changedir = {toxinidir}
allowlist_externals =
    docker
    grep
    sleep
    bash
commands =
    pip install -e packages/syft
    pip install -e packages/hagrid
    docker --version
    docker compose version
    bash -c 'HAGRID_ART=false hagrid launch test_node1 domain to docker:9081 --tail=false'
    bash -c 'HAGRID_ART=false hagrid launch test_node2 domain to docker:9082 --tail=false'
    docker ps
    bash -c '(docker logs test_node1_frontend_1 -f &) | grep -q "event - compiled successfully" || true'
    bash -c '(docker logs test_node1_backend_stream_1 -f &) | grep -q "Application startup complete" || true'
    bash -c '(docker logs test_node2_backend_stream_1 -f &) | grep -q "Application startup complete" || true'
    sleep 5
    pytest tests/integration -vvvv
    bash -c 'HAGRID_ART=false hagrid land test_node1'
    bash -c 'HAGRID_ART=false hagrid land test_node2'


[testenv:grid.test.backend]
description = Tests for Grid Backend
deps =
    {[testenv:syft]deps}
    pytest
    pytest-xdist[psutil]
    poetry
    importlib-metadata
changedir = {toxinidir}/packages/grid/backend/app
allowlist_externals =
    bash
commands =
    python --version
    pip install -r requirements.txt
    pip install importlib-metadata colorama # poetry is messing this up?
    bash -c 'SQLALCHEMY_DATABASE_URI="sqlite:///file:test_db?mode=memory&cache=shared&uri=true" LOGURU_SINK="./grid.log" pytest app/tests'

[flake8]
ignore =
    W503
max-line-length = 120
exclude =
    .tox

[mypy]
python_version = 3.9
