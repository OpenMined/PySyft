name: VM Tests - Stack

on:
  workflow_call:

  # pull_request:
  #   branches:
  #     - dev
  #     - main
  #     - "0.8"

  workflow_dispatch:
    inputs:
      none:
        description: "Run Version Tests Manually"
        required: false

jobs:
  vm-tests-stack:
    strategy:
      max-parallel: 99
      matrix:
        os: [macos-12]
        python-version: ["3.11"]
        deployment-type: ["vm"]
      fail-fast: false

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - name: Check for file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        if: steps.changes.outputs.stack == 'true'
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        if: steps.changes.outputs.stack == 'true'
        id: pip-cache
        shell: bash
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: pip cache
        uses: actions/cache@v4
        if: steps.changes.outputs.stack == 'true'
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}

      - name: Upgrade pip
        if: steps.changes.outputs.stack == 'true'
        run: |
          python -m pip install --upgrade --user pip

      - name: Install tox
        if: steps.changes.outputs.stack == 'true'
        run: |
          pip install -U tox

      - name: Run notebook tests
        if: steps.changes.outputs.stack == 'true'
        env:
          ORCHESTRA_DEPLOYMENT_TYPE: "${{ matrix.deployment-type }}"
        run: |
          tox -e stack.test.vm
