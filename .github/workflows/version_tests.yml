# Version Tests
# To speed up development we don't run all the tests when opening and updating a PR.
# This test will run older versions of things like Python and Torch nightly so that
# we don't consume a lot of extra actions when we don't need to. It's important to
# keep this in sync with pr_tests.yml so that they are essentially doing the same thing
# only this runs on a schedule.
name: Version Tests

on:
  schedule:
    - cron: "0 22 * * *" # 7pm Brazil, 10pm UTC, 8am AEST
  pull_request:
    branches:
      - dev
    paths:
      - "tests/trigger/version_tests"

jobs:
  python-tests-all-versions:
    strategy:
      max-parallel: 99
      matrix:
        branches: ["dev"]
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        torch-version: [1.6.0, 1.7.1, 1.8.0]
        exclude:
          - python-version: 3.9
            torch-version: 1.6.0
          - python-version: 3.9
            torch-version: 1.7.1
          - python-version: 3.9
            torch-version: 1.8.0

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branches }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install PyTorch
        run: |
          pip install packaging --default-timeout=60
          python scripts/adjust_torch_versions.py ./requirements.torch.txt ${{ matrix.torch-version }}
          cat ./requirements.torch.txt
          pip install -r requirements.torch.txt --no-deps -f https://download.pytorch.org/whl/torch_stable.html --default-timeout=60

      - name: Install packages
        run: |
          pip install -r requirements.dev.txt --default-timeout=60
          pip install -e . --default-timeout=60
          pip list
        timeout-minutes: 20

      - name: Scan for security issues
        run: |
          bandit -r src
          safety check

      - name: Run normal tests
        run: |
          pytest -m 'fast or slow' --cov syft --cov-fail-under 80 -n auto

      - name: Install supported library packages Linux and MacOS - Ignore Errors
        if: startsWith(runner.os, 'Windows') != true
        run: |
          cat requirements.libs.txt | xargs -I {} -n 1 pip install {} --no-deps --default-timeout=60 || true

      - name: Install supported library packages Windows - Ignore Errors
        if: startsWith(runner.os, 'Windows')
        run: |
          foreach ($i in cat requirements.libs.txt) {
            pip install $i --no-deps --default-timeout=60
          }

      - name: Install libomp for XGBoost
        if: startsWith(runner.os, 'macos')
        run: |
          brew install libomp

      - name: Run supported library tests
        run: |
          pip install -r requirements.libs.deps.txt --default-timeout=60
          pip list
          pytest -m libs --co
          pytest -m libs -n auto -k "not tenseal" --suppress-no-test-exit-code
          pytest -m libs -n 1 -k "tenseal" --suppress-no-test-exit-code

  pygrid-integration-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        branches: ["dev"]
        python-version: [3.6, 3.7, 3.8, 3.9]
        torch-version: [1.8.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branches }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - uses: actions/checkout@v2
        with:
          repository: "OpenMined/PyGrid"
          ref: "dev"
          path: "pygrid"

      - name: Install PyTorch
        run: |
          pip install packaging --default-timeout=60
          python scripts/adjust_torch_versions.py ./requirements.torch.txt ${{ matrix.torch-version }}
          cat ./requirements.torch.txt
          pip install -r requirements.torch.txt --no-deps -f https://download.pytorch.org/whl/torch_stable.html --default-timeout=60

      - name: Test PyGrid
        continue-on-error: true
        run: |
          pip install -e . --default-timeout=60
          pip install -r requirements.grid.txt --default-timeout=60
          pytest ./pygrid/apps/domain/tests
          pytest ./pygrid/apps/network/tests
          pytest ./pygrid/apps/worker/tests
          pytest -m grid

  pytorch-tests-all-versions:
    strategy:
      max-parallel: 99
      matrix:
        branches: ["dev"]
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        torch-version: [1.6.0, 1.7.1, 1.8.0]
        exclude:
          - python-version: 3.9
            torch-version: 1.6.0
          - python-version: 3.9
            torch-version: 1.7.1
          - python-version: 3.9
            torch-version: 1.8.0

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branches }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install PyTorch
        run: |
          pip install packaging --default-timeout=60
          python scripts/adjust_torch_versions.py ./requirements.torch.txt ${{ matrix.torch-version }}
          cat ./requirements.torch.txt
          pip install -r requirements.torch.txt --no-deps -f https://download.pytorch.org/whl/torch_stable.html --default-timeout=60

      - name: Install packages
        run: |
          pip install -r requirements.txt
          pip install -e .

      - name: Check import works without dev packages
        run: |
          python -c "import syft"

      - name: Install dev packages
        run: |
          pip install -r requirements.dev.txt
          pip install -e .

      - name: Run torch tests
        run: |
          pytest -m torch -n auto -p no:benchmark
