name: Security-check
# on:
#   push:
#     branches:
#       - dev
#     paths:
#       - "**.py"
#       - ".github/workflows/**.yml"

# Running job as a PR test
on:
  pull_request:
    branches:
      - dev
    paths:
      - "**.py"
      - "**.txt"
      - "setup.cfg"
      - ".github/workflows/*.yml"
      - "examples/private-ai-series/**.ipynb"

jobs:
  security-check:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
        torch-version: [1.8.0]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install PyTorch
        run: |
          pip install packaging --default-timeout=60
          python scripts/adjust_torch_versions.py ./requirements.torch.txt ${{ matrix.torch-version }}
          cat ./requirements.torch.txt
          pip install -r requirements.torch.txt --no-deps -f https://download.pytorch.org/whl/torch_stable.html --default-timeout=60

      - name: Install packages
        run: |
          pip install -r requirements.dev.txt --default-timeout=60
          pip install -e . --default-timeout=60
          pip list
        timeout-minutes: 20

      - name: Scan for security issues
        run: |
          bandit -r src
          safety check

      - name: Install supported library packages Linux and MacOS - Ignore Errors
        if: startsWith(runner.os, 'Windows') != true
        run: |
          cat requirements.libs.txt | xargs -I {} -n 1 pip install {} --no-deps --default-timeout=60 || true

      - name: Install supported library
        run: |
          pip install -r requirements.libs.deps.txt --default-timeout=60
          pip list

      # TO BE MOVED TO merge_tests, adding here to check its working before merging.

      - name: Synk security check
        if: startsWith(runner.os, 'ubuntu')
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: 3106d1f2-a045-4bc6-8695-d899ab653448 # to be changed to env variable.
        with:
          args: --skip-unresolved

      ##-----##

