name: Syft Publish

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel twine tox bump2version
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          tox -e syft.publish
          twine upload packages/syft/dist/*

      - name: Set Grid package version
        run: echo "GRID_VERSION=$(python packages/grid/VERSION)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta for Grid-Backend
        id: meta_grid_backend
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-backend
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest

      - name: Build and push `grid-backend` image to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: ./packages
          file: ./packages/grid/backend/backend.dockerfile
          push: true
          tags: ${{ steps.meta_grid_backend.outputs.tags }}

      - name: Docker meta for Grid-Frontend
        id: meta_grid_frontend
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-frontend
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest

      - name: Build and push `grid-frontend` image to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: ./packages/grid/frontend
          file: ./packages/grid/frontend/frontend.dockerfile
          push: true
          target: "grid-ui-production"
          tags: ${{ steps.meta_grid_frontend.outputs.tags }}

      - name: Docker meta for Grid-Headscale
        id: meta_grid_headscale
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-vpn-headscale
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest

      - name: Build and push `grid-headscale` image to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: ./packages/grid/vpn
          file: ./packages/grid/vpn/headscale.dockerfile
          push: true
          tags: ${{ steps.meta_grid_headscale.outputs.tags }}

      - name: Docker meta for Grid-Tailscale
        id: meta_grid_tailscale
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-vpn-tailscale
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest

      - name: Build and push `grid-tailscale` image to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: ./packages/grid/vpn
          file: ./packages/grid/vpn/tailscale.dockerfile
          push: true
          tags: ${{ steps.meta_grid_tailscale.outputs.tags }}
