name: Security-check

on:
  workflow_call:

  pull_request:
    branches:
      - dev
      - main
      - "0.6.0"
      - "0.7.0"
      - "0.8"
defaults:
  run:
    working-directory: ./packages/syft

jobs:
  package-security:
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        torch-version: [1.11.0]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        if: steps.changes.outputs.syft == 'true'
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        if: steps.changes.outputs.syft == 'true'
        run: |
          python -m pip install --upgrade --user pip

      - name: Get pip cache dir
        if: steps.changes.outputs.syft == 'true'
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v3
        if: steps.changes.outputs.syft == 'true'
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install Dependencies
        if: steps.changes.outputs.syft == 'true'
        run: |
          pip install packaging wheel --default-timeout=60
          python scripts/adjust_torch_versions.py ./setup.cfg ${{ matrix.torch-version }}
          pip install -e .[dev] -f https://download.pytorch.org/whl/torch_stable.html

      - name: Scan for security issues
        if: steps.changes.outputs.syft == 'true'
        run: |
          pip install importlib-metadata==4.13.0
          bandit -r src
          safety check

      - name: Generate requirements.txt for snyk
        if: steps.changes.outputs.syft == 'true'
        run: |
          pwd
          sed -n '/syft =/,/^$/p' setup.cfg | tail -n +3 > requirements.txt
          ls
          mv requirements.txt ${{ github.workspace }}
          mv .snyk ${{ github.workspace }}

      # - name: Snyk security check
      #   if: steps.changes.outputs.syft == 'true'
      #   uses: snyk/actions/python-3.8@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
