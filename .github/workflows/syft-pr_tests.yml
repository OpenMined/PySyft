# PR Tests
# To speed up development we don't run all the tests when opening and updating a PR.
# Instead we first run the lint check which fails fast and then only run the
# `pytest -m fast` tests against Ubuntu and Windows and the notebook examples.
# Once these checks pass and we decide to do a merge, the actions in `merge_tests.yml`
# get executed.
name: Syft PR Tests

on:
  workflow_call:

  pull_request:
    branches:
      - dev
      - main
      - "0.6.0"
      - "0.7.0"
defaults:
  run:
    working-directory: ./packages/syft

jobs:
  syft-core-tests-latest-versions:
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ["3.10"]
        torch-version: [1.11.0]
        include:
          - python-version: "3.7"
            torch-version: 1.11.0
            os: "ubuntu-latest"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        if: steps.changes.outputs.syft == 'true'
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        if: steps.changes.outputs.syft == 'true'
        run: |
          python -m pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        if: steps.changes.outputs.syft == 'true'
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        if: steps.changes.outputs.syft == 'true'
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install Dependencies
        if: steps.changes.outputs.syft == 'true'
        run: |
          pip install packaging wheel --default-timeout=60
          python scripts/adjust_torch_versions.py ./setup.cfg ${{ matrix.torch-version }}
          python -c "import platform; import os; os.system('pip install jaxlib===0.3.7 -f https://whls.blob.core.windows.net/unstable/index.html') if platform.system().lower() == 'windows' else ''"
          pip install pycapnp
          pip install -e .[dev] -f https://download.pytorch.org/whl/torch_stable.html

      - name: Scan for security issues python 3.8+
        if: steps.changes.outputs.syft == 'true' && matrix.python-version != '3.7'
        run: |
          bandit -r src
          safety check

      - name: Scan for security issues python 3.7
        if: steps.changes.outputs.syft == 'true' && matrix.python-version == '3.7'
        run: |
          bandit -r src
          # we want to test python 3.7 for colab so we have to ignore these numpy issues
          safety check -i 44717 -i 44716 -i 44715

      - name: Run normal tests
        if: steps.changes.outputs.syft == 'true'
        run: |
          pytest -s -m 'fast or slow' --cov syft --cov-fail-under 68 -n auto --durations=50
