name: HAGrid Continuous Delivery

on:
  schedule:
    - cron: "00 03 * * *"
  workflow_dispatch:
    inputs:
      none:
        description: "Run hagrid cd manually"
        required: false

jobs:
  hagrid-hash-challenge:
    runs-on: ubuntu-latest
    name: hash-challenge

    outputs:
      current_hash: ${{ steps.get_hash.outputs.current_hash }}
      previous_hash: ${{ steps.get_hash.outputs.previous_hash }}
    steps:
      - name: Install checksumdir
        run: |
          pip install --upgrade checksumdir
      - name: Get the hashes
        id: get-hashes
        run: |
          current_hash=$(checksumdir packages/hagrid)
          echo "::set-output name=current_hash::$current_hash"
          previous_hash=$(cat ./scripts/hagrid_hash)

  deploy-hagrid:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SYFT_BUMP_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        if: ${{needs.hagrid-hash-challenge.outputs.current_hash}} != ${{needs.hagrid-hash-challenge.outputs.previous_hash}}
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel twine tox bump2version

      - name: Bump the Version
        if: ${{needs.hagrid-hash-challenge.outputs.current_hash}} != ${{needs.hagrid-hash-challenge.outputs.previous_hash}}
        run: |
          python3 hagrid/__init__.py
          bump2version patch --allow-dirty --no-commit
          tox -e lint || true
          python3 hagrid/__init__.py
        working-directory: ./packages/hagrid

      - name: Write the new hash
        if: ${{needs.hagrid-hash-challenge.outputs.current_hash}} != ${{needs.hagrid-hash-challenge.outputs.previous_hash}}
        run: echo $(checksumdir packages/hagrid) > ./scripts/hagrid_hash

      - name: Commit changes
        if: ${{needs.hagrid-hash-challenge.outputs.current_hash}} != ${{needs.hagrid-hash-challenge.outputs.previous_hash}}
        uses: EndBug/add-and-commit@v7
        with:
          author_name: Madhava Jay
          author_email: madhava@openmined.org
          message: "bump version"
          add: "['./packages/hagrid/.bumpversion.cfg','./packages/hagrid/hagrid/__init__.py', './scripts/hagrid_hash']"

      - name: Build and publish
        if: ${{needs.hagrid-hash-challenge.outputs.current_hash}} != ${{needs.hagrid-hash-challenge.outputs.previous_hash}}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          tox -e hagrid.publish
          twine upload packages/hagrid/dist/*
