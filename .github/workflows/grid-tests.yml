name: Grid Tests

on:
  pull_request:
    branches:
      - dev
    paths:
      - ".github/workflows/grid-*.yml"
      - "packages/grid/**.py"
      - "packages/grid/**.txt"
      - "packages/grid/**.toml"
      - "packages/grid/setup.cfg"

defaults:
  run:
    working-directory: ./packages/grid

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Install Tox and pyenv
        run: |
          sudo apt-get install -y tox
          curl https://pyenv.run | bash
          echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
          echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
          echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n eval "$(pyenv init -)"\nfi' >> ~/.bashrc
          exec "$SHELL"

      - name: Run precommit check
        run: |
          tox -e grid.precommit

  build:
    runs-on: ubuntu-latest
    # needs: [linting]
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Install Poetry
        run: |
          pip install poetry

      - name: Get poetry cache dir
        id: poetry-cache
        run: |
          echo "::set-output name=dir::$(poetry config cache-dir)"

      - name: poetry cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      # - id: file_changes  # get changed files.
      #   uses: trilom/file-changes-action@v1.2.3
      #   with:
      #     output: ' '

      # - uses: pre-commit/action@v2.0.3
      #   with:
      #     extra_args: --files ${{ steps.file_changes.outputs.files}}  # apply only to changed files.

      - name: Test Grid Domain
        run: |
          cd ./apps/domain/

          # Install dependencies
          poetry install

          # Run black
          poetry run black --check --verbose .

          # Run docformatter
          poetry run docformatter --check --recursive .

          # Run unit tests
          poetry run coverage run -m pytest -v tests

      - name: Test Grid Network
        run: |
          cd ./apps/network/

          # Install dependencies
          poetry install

          # Run black
          poetry run black --check --verbose --exclude src/syft .

          # Run docformatter
          poetry run docformatter --check --recursive .

          # Run unit tests
          poetry run coverage run -m pytest -v tests

      - name: Test Grid Worker
        run: |
          cd ./apps/worker/

          # Install dependencies
          poetry install

          # Run black
          poetry run black --check --verbose --exclude src/syft .

          # Run docformatter
          poetry run docformatter --check --recursive .

          # Run unit tests
          poetry run coverage run -m pytest -v tests

      - name: Run Integration Tests
        run: |
          cd ./apps/domain/

          # Run Integration tests
          # poetry run coverage run -m pytest -v ../../tests
