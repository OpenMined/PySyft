name: Syft Lib Tests

on:
  pull_request:
    branches:
     - feature/redback
    paths:
    - ".github/workflows/syft-*.yml"
    - "packages/syft-libs/**"
  
defaults:
  run:
    working-directory: ./packages/syft-libs

jobs:
  python-linting:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"

      - name: Build Protos
        run: |
          set -e
          pip install black isort --default-timeout=60
          find . -name "build_proto.sh" -execdir bash -c 'cd .. && sh scripts/build_proto.sh'  \;

      - name: Hack pre-commit # https://github.com/pre-commit/action/issues/44
        working-directory: ./packages/syft
        run: |
          pwd
          ls
          cp .pre-commit-config.yaml ../../
      - uses: pre-commit/action@v2.0.3

  lib-tests-latest:
    needs: [python-linting]
    strategy:
      max-parallel: 3
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.9]
        torch-version: [1.8.1]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install Syft and Dependencies
        working-directory: ./packages/syft
        run: |
          pip install packaging --default-timeout=60
          python scripts/adjust_torch_versions.py ./setup.cfg ${{ matrix.torch-version }}
          grep -A 3 "torch_ecosystem" setup.cfg
          pip install -r requirements.unstable.txt
          pip install -e .[ci-all] -f https://download.pytorch.org/whl/torch_stable.html
          python scripts/parse_setup.py setup.cfg | xargs pip install --no-deps || true

      - name: Install Support lib
        shell: bash
        run: |
          pwd
          find . -type d -name "syft-*" -exec pip install {} \;

      - name: Scan for security issues
        shell: bash
        run: |
          find . -type d -name "syft-*" -exec bandit -vr {}/src \;
          safety check

      - name: Install libomp for XGBoost
        if: startsWith(runner.os, 'macos')
        run: |
          brew install libomp

      - name: Run supported library tests
        run: |
          pytest --co --durations=50
          pytest -n auto --suppress-no-test-exit-code --durations=50
